package multiThreading;

import java.util.Scanner;

public class CalculatingTime_V171 extends Thread {
	/* Calculating the time taken by a method to complete it's execution */
	static int number;
	static int sum = 0;

	public static void main(String[] args) {
		long startTime = System.currentTimeMillis();
		MultiThreadingExample5 joinMethod = new MultiThreadingExample5();
		@SuppressWarnings("resource")
		Scanner scanner = new Scanner(System.in);
		System.out.println("Enter a number to calculate the sum of n natural numbers : ");
		MultiThreadingExample5.number = scanner.nextInt();
		joinMethod.start();

		try {
			joinMethod.join();
		} catch (InterruptedException e) {
			System.out.println("Issue in the main method");
		}
		System.out.println("The sum of n natural number's is : " + MultiThreadingExample5.sum);
		long endTime = System.currentTimeMillis();
		System.out.println(
				"The total time taken to complete the execution is : " + (endTime - startTime) / 1000 + " second");
	}

	public void run() {
		for (int i = 0; i <= MultiThreadingExample5.number; i++) {
			MultiThreadingExample5.sum = MultiThreadingExample5.sum + i;
		}
	}

}
